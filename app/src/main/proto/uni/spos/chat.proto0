syntax = "proto3"; // protocol buffer proto3

option java_multiple_files = true;
option java_package = "io.grpc.uni.spos";
option java_outer_classname = "sPosChatProto";

//go:generate root@uniser03:/usr/lhh/gopath/src/spos_proto/uni/voice# protoc -I . --go_out=plugins=grpc:. chat.proto
// package: chat


package chat;   
/*
service name:Chat
*/
service Chat {   
 
    rpc Login(ClientLoginReq) returns (ClientLoginRes){}

    rpc BidStream(stream ClientSendMsgToServer) returns (stream ServerSendMsgToClient) {}
	
	// Sends a greeting
    rpc SayHello (HelloRequest) returns (HelloReply) {}
}

//  client login Req
message ClientLoginReq {
	string sid = 1;
	string name = 2;
	string mac = 3;
	
}

message ClientLoginRes {
    bool ret = 1;	
}

//  client send data to server
message ClientSendMsgToServer {
	enum MsgType{
		TEXT = 0;
		VOICE =1;
		IMAGE =2;
		VIDEO =3;
	}
	MsgType mtype =1;
	string sid = 2;
	string did = 3;
    bytes msg = 4;
	int32 sample_rate=5;
}
// server send data to client
message ServerSendMsgToClient {
 	enum MsgType{
		TEXT = 0;
		VOICE =1;
		IMAGE =2;
		VIDEO =3;
	}
	MsgType mtype =1;
	string sid = 2;
	string did = 3;	
    bytes msg = 4;
	int32 sample_rate=5;
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
